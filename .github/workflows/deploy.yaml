name: Deploy
on:
  push:
    branches: main
jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.CI_CD_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.CI_CD_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build and push handler
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          file: dockerfile.handler
          tags: ${{ steps.login-ecr.outputs.registry }}/wca-registration-handler:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Build and push worker
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          file: dockerfile.worker
          tags: ${{ steps.login-ecr.outputs.registry }}/wca-registration-worker:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Deploy worker
        run: |
          aws ecs update-service --cluster wca-registration --service wca-registration-worker --force-new-deployment
      - name: Deploy Frontend
        run: |
          cd ./Frontend
          npm install
          npm run build-prod
          aws s3 sync dist s3://assets.registration.worldcubeassociation.org/dist
          aws cloudfront create-invalidation --distribution-id E322K044MBR5FG --paths "/dist/*" --output text
