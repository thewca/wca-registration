---
openapi: 3.0.1
info:
  title: API V1
  version: v1
components:
  securitySchemes:
    Bearer:
      description: "..."
      type: apiKey
      name: Authorization
      in: header
  schemas:
    error_response:
      type: object
      properties:
        error:
          type: number
      required:
      - error
    success_response:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
      required:
      - status
      - message
    userIds:
      type: array
      items:
        $ref: "#/components/schemas/userId"
    userId:
      type: number
    paymentInfo:
      type: object
      required: [id, string]
      properties:
        id:
          type: integer
        status:
          type: string
    userInfo:
      type: object
      required: [id, name, wca_id, gender, country, country_iso2, url, class]
      properties:
        id:
          type: number
        name:
          type: string
        wca_id:
          type: string
        gender:
          type: string
        country_iso2:
          type: string
        url:
          type: string
        country:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
            continentId:
              type: string
            iso2:
              type: string
          required: [id, name, continentId, iso2]
        class:
          type: string
    registration:
      type: object
      properties:
        user_id:
          type: number
        competing:
          type: object
          properties:
            event_ids:
              type: array
              items:
                type: string
                format: EventId
          required:
          - event_ids
      required:
      - user_id
      - competing
    sortedRanking:
      type: object
      properties:
        user_id:
          type: string
        wca_id:
          type: string
        single_rank:
          type: number
        single_best:
          type: number
        average_rank:
          type: number
        average_best:
          type: number
        pos:
          type: number
        tied_previous:
          type: boolean
      required:
      - user_id
      - single_rank
      - single_best
      - average_rank
      - average_best
      - pos
      - tied_previous
    psychSheet:
      type: object
      properties:
        sort_by:
          type: string
        sort_by_secondary:
          type: string
        sorted_rankings:
          type: array
          items:
            "$ref": "#/components/schemas/sortedRanking"
      required:
      - sort_by
      - sort_by_secondary
      - sorted_rankings
    registrationAdmin:
      type: object
      properties:
        user_id:
          type: number
        competing:
          type: object
          properties:
            event_ids:
              type: array
              items:
                type: string
                format: EventId
            registered_on:
              type: string
            registration_status:
              type: string
            comment:
              type: string
              nullable: true
            admin_comment:
              type: string
              nullable: true
          required:
          - event_ids
          - registered_on
          - registration_status
        guests:
          type: number
          nullable: true
      required:
      - user_id
      - competing
    submitRegistrationBody:
      properties:
        user_id:
          type: string
        competition_id:
          type: string
        competing:
          type: object
          properties:
            event_ids:
              type: array
              items:
                type: string
                format: EventId
            comment:
              type: string
            guests:
              type: number
      required:
      - user_id
      - competition_id
      - competing
    updateRegistrationBody:
      properties:
        user_id:
          type: string
        competition_id:
          type: string
        competing:
          type: object
          properties:
            event_ids:
              type: array
              items:
                type: string
                format: EventId
            status:
              type: string
            comment:
              type: string
            admin_comment:
              type: string
        guests:
          type: number
      required:
      - user_id
      - competition_id
paths:
  "/api/v1/users":
    post:
      summary: 'Private: Returns info about a list of users'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                ids:
                  "$ref": "#/components/schemas/userIds"
              required: [ids]
        required: true
      responses:
        '200':
          description: "Successfully returns UserInfo"
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/userInfo"
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error_response"
  "/api/v1/{competition_id}/payment":
    get:
      summary: 'Public: Gets the Payment Id for the current User and Competition'
      parameters:
        - name: competition_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "Returns the payment info"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/paymentInfo"
        '401':
          description: "Missing Authentication"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error_response"
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error_response"

  "/api/v1/registrations/{competition_id}":
    get:
      summary: 'Public: list registrations for a given competition_id'
      parameters:
      - name: competition_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: "Lists accepted registrations"
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/registration"
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error_response"
  "/api/v1/registrations/{competition_id}/waiting":
    get:
      summary: 'Public: Gets the waiting list'
      parameters:
        - name: competition_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "Lists"
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/registration"
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error_response"
  "/api/v1/psych_sheet/{competition_id}/{event_id}":
    get:
      summary: 'Private: Fetches the Psych Sheet for a given competition. The actual computation is handled by other Microservices'
      parameters:
      - name: competition_id
        in: path
        required: true
        schema:
          type: string
      - name: event_id
        in: path
        required: true
        schema:
          type: string
          format: EventId
      - name: sort_by
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: "Successfully passed down the Psych Sheet"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/psychSheet"
  "/api/v1/registrations/{competition_id}/admin":
    get:
      summary: 'Public: list registrations for a given competition_id'
      security:
      - Bearer: {}
      parameters:
      - name: competition_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: "Organizer has access to comp"
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/registrationAdmin"
        '401':
          description: "Organizer cannot access registrations for comps
            they arent organizing - multi comp auth"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error_response"
  "/api/v1/register":
    get:
      summary: Gets a single registrations
      security:
        - Bearer: {}
      parameters:
        - name: user_id
          in: query
          required: true
          schema:
            type: integer
        - name: competition_id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Returns the Registration'
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/registrationAdmin"
        '401':
          description: "Missing Authentication"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error_response"
        '403':
          description: 'Access Denied'
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error_response"
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error_response"
    post:
      summary: Add an attendee registration
      security:
      - Bearer: {}
      parameters: []
      responses:
        '202':
          description: "Competitor submits basic registration"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/success_response"
        '401':
          description: "User impersonation (no admin permission, JWT token
            user_id does not match registration user_id)"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error_response"
        '422':
          description: User registration exceeds guest limit
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error_response"
        '403':
          description: "User cant register while registration is closed"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error_response"
        '400':
          description: "Empty payload provided"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error_response"
        '404':
          description: "Competition does not exist"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/submitRegistrationBody"
        required: true
    patch:
      summary: update or cancel an attendee registration
      security:
      - Bearer: {}
      parameters: []
      responses:
        '200':
          description: User changes comment
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  registration:
                    "$ref": "#/components/schemas/registrationAdmin"
        '422':
          description: User does not include required comment
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error_response"
        '401':
          description: User requests invalid status change to their own registration
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error_response"
        '403':
          description: User changes events / other stuff past deadline
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error_response"
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/updateRegistrationBody"
        required: true
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: registration.worldcubeassociation.org
