---
openapi: 3.0.1
info:
  title: API V1
  version: v1
components:
  schemas:
    registration:
      type: object
      properties:
        user_id:
          type: string
        competing:
          "$ref": "#/components/schemas/competing"
      required:
      - user_id
      - competing

    competing:
      type: object
      properties:
        event_ids:
          type: array
          items:
            type: string
        registration_status:
          type: string
        comment:
          type: string
          maxLength: 180
        guests:
          type: integer
      required:
        - event_ids
        - registration_status

paths:
  "/api/v1/attendees/{attendee_id}":
    get:
      summary: Retrieve attendee registration
      parameters:
      - name: attendee_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: check that registration returned matches expected registration
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/registration"
        '404':
          description: attendee_id doesnt exist
  "/api/v1/registrations/{competition_id}":
    get:
      summary: List registrations for a given competition_id
      parameters:
      - name: competition_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Competitions Service is down but we have registrations for
            the competition_id in our database
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/registration"
        '400':
          description: Competition ID not provided
        '404':
          description: Comeptition ID doesnt exist
        '500':
          description: Competition service unavailable - 500 error
        '502':
          description: Competition service unavailable - 502 error
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: www.example.com
